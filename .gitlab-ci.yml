image: cr.git.imsweb.com/plone/imsplone/plone-ci:plone6
stages:
- lint
- test
- audit
- report
- deploy


before_script:
  - source /plone6/instance/bin/activate
  - pip install -e .[test]

plone-tests:
  stage: test
  script:
    - zope-testrunner --test-path=. --ignore_dir=venv

flake8:
  stage: lint
  script:
    - pip install flake8
    - pip install Flake8-pyproject  # allows pyproject.toml
    - flake8 ims/

bandit:
  stage: audit
  script:
    - pip install bandit[toml]
    - bandit -c pyproject.toml -r ims/

coverage:
  stage: report
  script:
    - pip install coverage[toml]
    - coverage run -m zope.testrunner --test-path=.
    - coverage html
  when: on_success

  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+\%)/'
  artifacts:
    paths:
      - htmlcov

jake:
  stage: audit
  allow_failure: true
  script:
    - pip install jake
    - pip uninstall future
    - jake ddt

pages:
  stage: deploy
  dependencies:
    - coverage
  script:
    - mv htmlcov/ public/
  artifacts:
    paths:
      - public
    expire_in: 30 days

release:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
  script:
    - python -c "import os; from importlib_metadata import version; os.environ[\"PKG_VERSION\"] = version(\"${CI_PROJECT_NAME}\")"
    - git config user.email "${GITLAB_USER_EMAIL}"
    - git config user.name "${GITLAB_USER_NAME}"
    - git tag -a v${PKG_VERSION} -m "creating tag v${PKG_VERSION}"
    - git push https://oauth2:${GITLAB_ACCESS_TOKEN}@git.imsweb.com/${CI_PROJECT_PATH}.git v${PKG_VERSION}
    - pip install build
    - python -m build
    - rsync -avz --rsh="/usr/bin/sshpass -p ${WEB_ST_03_PASSWORD} ssh -l ${WEB_ST_03_USERNAME} -o StrictHostKeyChecking=no" ./dist/* web-st-03.imsweb.com:/prj/web2/intranetapps/htdocs/pypi/ims-fieldupdater
