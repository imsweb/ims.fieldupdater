[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ims.fieldupdater"
dynamic = ["version"]
requires-python = ">=3.8"
description = "Update all objects in Plone based on a schema/field strategy"
classifiers = [
    "Framework :: Plone :: 6.0",
    "Framework :: Plone :: 6.1",
    "Programming Language :: Python",
]
authors = [
    { name = "Eric Wohnlich", email = "wohnlice@imsweb.com" }
]
license = { text = "GPL" }

dependencies = [
    "plone>=6.0.4"
]

[project.urls]
homepage = "https://git.imsweb.com/plone/ims.fieldupdater"
documentation = "https://git.imsweb.com/plone/ims.fieldupdater"
repository = "https://git.imsweb.com/plone/ims.fieldupdater"

[project.optional-dependencies]
test = ["plone.app.testing", "plone.mocktestcase", "formencode", "pytest-plone", "plone.app.robotframework"]

[project.entry-points."plone.autoinclude.plugin"]
target = "plone"

[tool.bandit]
exclude_dirs = ["*/tests/*"]
skips = ["B313", "B314", "B315", "B316", "B317", "B318", "B319", "B320", "B410", "B404", "B603"]

[tool.coverage.report]
include = ["ims/fieldupdater/*"]
omit = ["venv", "*/test*", "*upgrades.py"]
[tool.hatch.version]
path = "ims/fieldupdater/__init__.py"

[tool.hatch.build]
strict-naming = false
packages = ["ims"]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = "coverage html"
cov = [
    "test-cov",
    "cov-report",
]

[tool.towncrier]
directory = "changes"
filename = "CHANGES.md"
package = "ims.fieldupdater"
issue_format = "[{issue}]: https://squishlist.com/ims/plone/{issue}"

[tool.towncrier.fragment.feature]
[tool.towncrier.fragment.bugfix]
[tool.towncrier.fragment.docs]
[tool.towncrier.fragment.breaking]
name = "Major Change"
check = true

[tool.towncrier.fragment.chore]
name = "Other tasks"
showcontent = false
check = false

[tool.ruff]
target-version = "py311"
line-length = 120
fix = true
lint.select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
]
lint.ignore = [
    # DoNotAssignLambda
    "E731",
    "S602",
    "S314",
    "S324",
    "SIM105"
]

[tool.ruff.format]
preview = true

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning:Products.*",
    "ignore::DeprecationWarning:plone.*",
    "ignore::DeprecationWarning:z3c.*",
    "ignore::DeprecationWarning:zope.*",
    "ignore::DeprecationWarning:webob.*",
    "ignore::DeprecationWarning:pkg_resources.*",
]